version: '3.9'

services:

  database:
    container_name: SqlServer
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@ssw0rd
      - MSSQL_PID=Express
    volumes:
      - sqlsystem:/var/opt/mssql/
      - sqldata:/var/opt/sqlserver/sqldata
      - sqllog:/var/opt/sqlserver/sqllog
      - sqlbackup:/var/opt/sqlserver/sqlbackups
    #logging:
    #  driver: none
    #restart: always

  api:
    container_name: Api
    image: api
    build:
      network: host
      context: ./Schedule
      dockerfile: Schedule.Api/Dockerfile
    ports:
      - "5050:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - database
    volumes:
      - ~/.aspnet/https:/https:ro
    #logging:
    #  driver: none
    #restart: always

  react:
    container_name: React
    image: react
    build: 
      network: host
      context: ./schedule.web.application
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - "3000:80"
    stdin_open: true
    #logging:
    #  driver: none
    #restart: always

volumes:
  sqlsystem:
  sqldata:
  sqllog:
  sqlbackup: